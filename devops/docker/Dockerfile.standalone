# QuickTalk 纯Rust架构 Dockerfile
# 适用于仅支持Rust的服务器环境

# 构建阶段
FROM rust:1.70-slim-bullseye as builder

# 安装系统依赖
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    libsqlite3-dev \
    && rm -rf /var/lib/apt/lists/*

# 设置工作目录
WORKDIR /app

# 复制Cargo文件
COPY backend/Cargo.toml backend/Cargo.lock ./

# 预构建依赖（缓存优化）
RUN mkdir src && \
    echo "fn main() {}" > src/main.rs && \
    echo "fn main() {}" > src/main-standalone.rs && \
    cargo build --release --bin quicktalk-standalone && \
    rm -rf src

# 复制源代码
COPY backend/src ./src

# 构建独立版本应用
RUN cargo build --release --bin quicktalk-standalone --features standalone

# 运行时镜像（最小化）
FROM debian:bullseye-slim

# 安装最小运行时依赖
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libssl1.1 \
    sqlite3 \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get autoremove -y \
    && apt-get clean

# 创建应用用户
RUN useradd -r -s /bin/false -u 1001 quicktalk

# 创建应用目录
RUN mkdir -p /opt/quicktalk/{data,uploads,logs,static} && \
    chown -R quicktalk:quicktalk /opt/quicktalk

# 复制编译好的可执行文件
COPY --from=builder /app/target/release/quicktalk-standalone /opt/quicktalk/bin/quicktalk

# 复制前端静态文件
COPY frontend/dist /opt/quicktalk/static

# 设置权限
RUN chmod +x /opt/quicktalk/bin/quicktalk && \
    chown -R quicktalk:quicktalk /opt/quicktalk

# 切换到应用用户
USER quicktalk

# 设置工作目录
WORKDIR /opt/quicktalk

# 暴露端口
EXPOSE 3030

# 设置环境变量
ENV RUST_LOG=info \
    DATABASE_URL=sqlite:/opt/quicktalk/data/database.sqlite \
    STATIC_DIR=/opt/quicktalk/static \
    UPLOAD_DIR=/opt/quicktalk/uploads \
    LOG_DIR=/opt/quicktalk/logs \
    STANDALONE_MODE=true

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:3030/api/health || exit 1

# 启动应用
CMD ["./bin/quicktalk"]

# 镜像标签
LABEL maintainer="QuickTalk Team" \
      version="1.0.0" \
      description="QuickTalk Customer Service System - Rust Standalone" \
      architecture="rust-only"