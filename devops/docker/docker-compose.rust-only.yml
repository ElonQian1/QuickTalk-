# 纯Rust架构 (推荐生产环境)
version: '3.8'

services:
  # 仅Rust服务器 - 独立运行
  quicktalk-rust-only:
    build:
      context: ../..
      dockerfile: devops/docker/Dockerfile.rust
    container_name: quicktalk-rust-standalone
    restart: unless-stopped
    ports:
      - "3030:3030"
    environment:
      - RUST_LOG=info
      - DATABASE_URL=sqlite:/app/data/database.sqlite
      # 不依赖Node.js微服务
      - STANDALONE_MODE=true
    volumes:
      - quicktalk-data:/app/data
      - quicktalk-uploads:/app/uploads
      - quicktalk-logs:/app/logs
    networks:
      - quicktalk-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3030/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Nginx反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: quicktalk-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/sites-available:/etc/nginx/sites-available:ro
      - quicktalk-uploads:/var/www/uploads:ro
    depends_on:
      - quicktalk-rust-only
    networks:
      - quicktalk-network
    profiles:
      - with-nginx

# 数据卷
volumes:
  quicktalk-data:
    driver: local
  quicktalk-uploads:
    driver: local
  quicktalk-logs:
    driver: local

# 网络
networks:
  quicktalk-network:
    driver: bridge