# QuickTalk Rust 后端 Dockerfile
FROM rust:1.70-slim-bullseye as builder

# 安装系统依赖
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    libsqlite3-dev \
    && rm -rf /var/lib/apt/lists/*

# 设置工作目录
WORKDIR /app

# 复制Cargo文件
COPY backend/Cargo.toml backend/Cargo.lock ./

# 创建虚拟main.rs以缓存依赖
RUN mkdir src && \
    echo "fn main() {println!(\"if you see this, the build broke\")}" > src/main.rs && \
    cargo build --release && \
    rm -f target/release/deps/quicktalk_rust*

# 复制源代码
COPY backend/src ./src

# 构建应用
RUN cargo build --release

# 运行时镜像
FROM debian:bullseye-slim

# 安装运行时依赖
RUN apt-get update && apt-get install -y \
    ca-certificates \
    libssl1.1 \
    sqlite3 \
    && rm -rf /var/lib/apt/lists/*

# 创建应用用户
RUN useradd -r -s /bin/false quicktalk

# 创建应用目录
RUN mkdir -p /app/data /app/uploads /app/logs
RUN chown -R quicktalk:quicktalk /app

# 复制可执行文件
COPY --from=builder /app/target/release/quicktalk-rust /app/
COPY --from=builder /app/target/release/quicktalk-rust /usr/local/bin/

# 复制前端构建文件
COPY frontend/dist /app/static

# 设置权限
RUN chmod +x /app/quicktalk-rust

# 切换到应用用户
USER quicktalk

# 设置工作目录
WORKDIR /app

# 暴露端口
EXPOSE 3030

# 设置环境变量
ENV RUST_LOG=info
ENV DATABASE_URL=sqlite:/app/data/database.sqlite

# 启动应用
CMD ["./quicktalk-rust"]